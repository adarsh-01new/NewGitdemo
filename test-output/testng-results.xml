<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-05-20T20:58:54 IST" name="Loans" finished-at="2025-05-20T20:58:54 IST" duration-ms="113">
    <groups>
      <group name="sanity">
        <method signature="RestdThree.Creditcard()[pri:0, instance:TestngPractice.RestdThree@169e6180]" name="Creditcard" class="TestngPractice.RestdThree"/>
        <method signature="Restudyone.busloan()[pri:0, instance:TestngPractice.Restudyone@28f2a10f]" name="busloan" class="TestngPractice.Restudyone"/>
        <method signature="RestdyTwo.red()[pri:0, instance:TestngPractice.RestdyTwo@27f981c6]" name="red" class="TestngPractice.RestdyTwo"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2025-05-20T20:58:54 IST" name="colour" finished-at="2025-05-20T20:58:54 IST" duration-ms="97">
      <class name="TestngPractice.RestdyTwo">
        <test-method is-config="true" signature="bs()[pri:0, instance:TestngPractice.RestdyTwo@27f981c6]" started-at="2025-05-20T20:58:54 IST" name="bs" finished-at="2025-05-20T20:58:54 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bs -->
        <test-method is-config="true" signature="yellow()[pri:0, instance:TestngPractice.RestdyTwo@27f981c6]" started-at="2025-05-20T20:58:54 IST" name="yellow" finished-at="2025-05-20T20:58:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- yellow -->
        <test-method signature="asercheck(java.lang.String,java.lang.String)[pri:0, instance:TestngPractice.RestdyTwo@27f981c6]" started-at="2025-05-20T20:58:54 IST" name="asercheck" data-provider="getData" finished-at="2025-05-20T20:58:54 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asercheck -->
        <test-method signature="asercheck(java.lang.String,java.lang.String)[pri:0, instance:TestngPractice.RestdyTwo@27f981c6]" started-at="2025-05-20T20:58:54 IST" name="asercheck" data-provider="getData" finished-at="2025-05-20T20:58:54 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondusrename]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asercheck -->
        <test-method signature="asercheck(java.lang.String,java.lang.String)[pri:0, instance:TestngPractice.RestdyTwo@27f981c6]" started-at="2025-05-20T20:58:54 IST" name="asercheck" data-provider="getData" finished-at="2025-05-20T20:58:54 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asercheck -->
        <test-method signature="blue()[pri:0, instance:TestngPractice.RestdyTwo@27f981c6]" started-at="2025-05-20T20:58:54 IST" name="blue" finished-at="2025-05-20T20:58:54 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- blue -->
        <test-method signature="greeen(java.lang.String)[pri:0, instance:TestngPractice.RestdyTwo@27f981c6]" started-at="2025-05-20T20:58:54 IST" name="greeen" finished-at="2025-05-20T20:58:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[www.newdumysite.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- greeen -->
        <test-method signature="red()[pri:0, instance:TestngPractice.RestdyTwo@27f981c6]" started-at="2025-05-20T20:58:54 IST" name="red" finished-at="2025-05-20T20:58:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- red -->
      </class> <!-- TestngPractice.RestdyTwo -->
      <class name="TestngPractice.Restudyone">
        <test-method is-config="true" signature="AS()[pri:0, instance:TestngPractice.Restudyone@28f2a10f]" started-at="2025-05-20T20:58:54 IST" name="AS" finished-at="2025-05-20T20:58:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AS -->
      </class> <!-- TestngPractice.Restudyone -->
    </test> <!-- colour -->
    <test started-at="2025-05-20T20:58:54 IST" name="Loan" finished-at="2025-05-20T20:58:54 IST" duration-ms="113">
      <class name="TestngPractice.RestdThree">
        <test-method is-config="true" signature="bt()[pri:0, instance:TestngPractice.RestdThree@169e6180]" started-at="2025-05-20T20:58:54 IST" name="bt" finished-at="2025-05-20T20:58:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bt -->
        <test-method is-config="true" signature="Fuelcard()[pri:0, instance:TestngPractice.RestdThree@169e6180]" started-at="2025-05-20T20:58:54 IST" name="Fuelcard" finished-at="2025-05-20T20:58:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Fuelcard -->
        <test-method is-config="true" signature="Debitcard()[pri:0, instance:TestngPractice.RestdThree@169e6180]" started-at="2025-05-20T20:58:54 IST" name="Debitcard" finished-at="2025-05-20T20:58:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Debitcard -->
        <test-method signature="Creditcard()[pri:0, instance:TestngPractice.RestdThree@169e6180]" started-at="2025-05-20T20:58:54 IST" name="Creditcard" finished-at="2025-05-20T20:58:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Creditcard -->
        <test-method is-config="true" signature="am()[pri:0, instance:TestngPractice.RestdThree@169e6180]" started-at="2025-05-20T20:58:54 IST" name="am" finished-at="2025-05-20T20:58:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- am -->
        <test-method is-config="true" signature="Debitcard()[pri:0, instance:TestngPractice.RestdThree@169e6180]" started-at="2025-05-20T20:58:54 IST" name="Debitcard" finished-at="2025-05-20T20:58:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Debitcard -->
        <test-method signature="failuretest()[pri:0, instance:TestngPractice.RestdThree@169e6180]" started-at="2025-05-20T20:58:54 IST" name="failuretest" finished-at="2025-05-20T20:58:54 IST" duration-ms="8" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at TestngPractice.RestdThree.failuretest(RestdThree.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failuretest -->
        <test-method is-config="true" signature="am()[pri:0, instance:TestngPractice.RestdThree@169e6180]" started-at="2025-05-20T20:58:54 IST" name="am" finished-at="2025-05-20T20:58:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- am -->
        <test-method is-config="true" signature="af()[pri:0, instance:TestngPractice.RestdThree@169e6180]" started-at="2025-05-20T20:58:54 IST" name="af" finished-at="2025-05-20T20:58:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- af -->
      </class> <!-- TestngPractice.RestdThree -->
      <class name="TestngPractice.Restudyone">
        <test-method signature="busloan()[pri:0, instance:TestngPractice.Restudyone@28f2a10f]" started-at="2025-05-20T20:58:54 IST" name="busloan" finished-at="2025-05-20T20:58:54 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- busloan -->
        <test-method signature="vehicleloan(java.lang.String)[pri:0, instance:TestngPractice.Restudyone@28f2a10f]" started-at="2025-05-20T20:58:54 IST" name="vehicleloan" finished-at="2025-05-20T20:58:54 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[www.dummysite.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleloan -->
        <test-method signature="dummy()[pri:0, instance:TestngPractice.Restudyone@28f2a10f]" started-at="2025-05-20T20:58:54 IST" name="dummy" finished-at="2025-05-20T20:58:54 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dummy -->
        <test-method signature="carloan()[pri:0, instance:TestngPractice.Restudyone@28f2a10f]" started-at="2025-05-20T20:58:54 IST" name="carloan" finished-at="2025-05-20T20:58:54 IST" depends-on-methods="TestngPractice.Restudyone.busloan, TestngPractice.Restudyone.vehicleloan" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- carloan -->
        <test-method is-config="true" signature="AF()[pri:0, instance:TestngPractice.Restudyone@28f2a10f]" started-at="2025-05-20T20:58:54 IST" name="AF" finished-at="2025-05-20T20:58:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AF -->
      </class> <!-- TestngPractice.Restudyone -->
    </test> <!-- Loan -->
  </suite> <!-- Loans -->
</testng-results>
